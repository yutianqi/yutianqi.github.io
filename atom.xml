<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Duke&#39;s Tech Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-02T11:45:29.353Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Duke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac与PC：一个Windows用户使用Mac的一些分享</title>
    <link href="http://example.com/2023/08/15/2023/08-15_%E4%B8%80%E4%B8%AAWindows%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8Mac%E7%9A%84%E4%B8%80%E4%BA%9B%E5%88%86%E4%BA%AB/"/>
    <id>http://example.com/2023/08/15/2023/08-15_%E4%B8%80%E4%B8%AAWindows%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8Mac%E7%9A%84%E4%B8%80%E4%BA%9B%E5%88%86%E4%BA%AB/</id>
    <published>2023-08-15T09:07:29.000Z</published>
    <updated>2024-12-02T11:45:29.353Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个Windows的重度用户，一直很想体验一下Mac，在入手了Mac后，发现二者的工作流还是存在一些差异的。</p><span id="more"></span><p>在这里做一个小小的分享，如果大家有更好的方案，也欢迎分享，希望大家友好讨论。<br>想对从Windows新切换到Mac的用户说：Mac的一些操作逻辑和PC是不一样的，大家要勇于接受变化。<br>想对Mac的老用户说：其实Windows现在已经有很大进步了，并且有些点个人觉得是超过Mac的，值得大家去体验。</p><h1 id="分享一个Windows使用习惯：将CapsLock替换成Ctrl"><a href="#分享一个Windows使用习惯：将CapsLock替换成Ctrl" class="headerlink" title="分享一个Windows使用习惯：将CapsLock替换成Ctrl"></a>分享一个Windows使用习惯：将CapsLock替换成Ctrl</h1><p>这个是某一期《内核恐慌》主播吴涛分享的一个习惯，虽然当时被另外一个主播Rio“鄙视”…试用了一下，发现真的是打开了新世界的大门。<br>毕竟大段输入全大写字母的场景是比较少的（我的习惯是按住Shifit输入大写字母，如果大段，直接小写输入完，通过IDE/文本编辑器快捷键整体转换），而且个人觉得CapsLock这个键位按起来会比Ctrl舒服很多（小拇指相对更舒展一点）,替换前还担心会不适应，结果不到一个上午就完全适应了，因为太符合直觉了。<br>并且这点修改在我切换到Mac之后，竟然有意外的收获：你可以直接将CapsLock映射为Cmd，这样很多操作就无缝切换了。</p><h1 id="文件管理：QSpace-Pro"><a href="#文件管理：QSpace-Pro" class="headerlink" title="文件管理：QSpace Pro"></a>文件管理：QSpace Pro</h1><p>切换到Mac的第一个晚上，最不适应的软件就是Finder，Enter从打开文件夹变成了重命名，打开文件夹要Cmd+Enter。这点我还愿意学习，但是文件剪切的操作，真的无法接受。如果说Mac的逻辑是想在粘贴的时候，让用户决定是将文件复制还是剪切，但是这个操作逻辑和各种编辑器里的文本操作逻辑又是矛盾的。<br>我的方案是放弃Finder，使用QSpace Pro。熟悉的快捷键，熟悉的界面，感谢作者，我的Windows资源管理器又回来了。<br>P.S.软件是付费的，如果大家需要，可以使用我的邀请码。:)</p><h1 id="窗口切换：AltTab"><a href="#窗口切换：AltTab" class="headerlink" title="窗口切换：AltTab"></a>窗口切换：AltTab</h1><p>对于一个从Windows切换过来的用户来讲，Mac的窗口切换逻辑实在是有点复杂，而开源软件AltTab又让我找回了熟悉的感觉。</p><h1 id="终端模拟软件：iTerm2"><a href="#终端模拟软件：iTerm2" class="headerlink" title="终端模拟软件：iTerm2"></a>终端模拟软件：iTerm2</h1><p>我在Windows下常用的终端模拟软件是XShell，除此之外偶尔也会使用MobaXterm，多年之前也曾深爱SecureCRT。<br>在Mac上，说到终端模拟软件，好多人都是直接推iTerm2。但其实严格来讲，iTerm2并不是一个终端模拟软件，而是一个终端软件。<br>而以上四款Windows上的终端模拟软件，只有SecureCRT有Mac版。类似体验还有一款RoyalCast。</p><h1 id="文件搜索：None"><a href="#文件搜索：None" class="headerlink" title="文件搜索：None"></a>文件搜索：None</h1><p>怀念Windows下的神器Everything。在Mac下暂时使用的是Alfred的文件搜索功能，很多人反馈会存在搜不到文件的情况，因为目前我在Mac上使用的并不多，所以还没遇到，但是已经产生信任危机了。</p><h1 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h1><p>最后附上我的软件列表：</p><h3 id="基础软件"><a href="#基础软件" class="headerlink" title="基础软件"></a>基础软件</h3><ul><li>Chrome：浏览器，未必最好，但是多平台下相对比较好的选择</li><li>QSpace：Finder替代</li><li>Karabiner-Elements：键盘映射</li><li>AltTab：Cmd+Tab窗口切换</li><li>搜狗输入法：未必最好，只是最熟悉</li><li>SublimeText：我用来作为笔记软件和临时文本编辑器</li><li>阿里云盘/百度网盘：目前主要使用阿里云盘</li><li>微信：日常沟通</li><li>网易云音乐：因为里面有我精心整理的歌单和大量手动上传的云盘音乐</li><li>ClashX Pro：必备</li><li>Alfred：快速启动</li><li>IINA：视频播放器</li><li>Word/Excel/PowerPoint/Outlook/OneNote：Office全家桶，尽量减少不兼容的概率</li><li>Magnet：窗口管理，15.1好像已经自带了</li><li>Tencent Lemon：主要用来卸载软件</li><li>Bandizip：文件解压缩，两个都在用</li><li>Bartender：状态栏管理，但最近突然喜欢上平铺…</li><li>iShot：截图</li><li>Paintbrush：简单画图</li><li>Photoshop：P图</li><li>Downie：网页视频下载</li><li>PDF Expert：PDF阅读</li><li>Parallels Desktop：虚拟机软件，里面装了Windows用来运行一些Windows程序，还装了再没有打开过的Kali Linux…</li><li>LuLu：防火墙</li><li>homebrew：软件安装</li><li>HyperDock：窗口预览，15.1好像已经用不了了</li><li>迅雷：下载</li></ul><h3 id="编程相关"><a href="#编程相关" class="headerlink" title="编程相关"></a>编程相关</h3><ul><li>Java</li><li>Python</li><li>Maven</li><li>npm：主要用来安装hexo</li><li>git：版本管理</li><li>VSCode：轻量级代码编辑器</li><li>IDEA：写Java项目</li><li>PyCharm：写大型Python项目</li><li>iTerm2：终端模拟软件</li><li>FileZilla：FTP文件传输工具</li><li>Beyond Compare：文本比较工具</li><li>Navicat Premium：数据库管理软件</li><li>Wireshark：抓包</li><li>Postman：请求发送</li><li>Hex Fiend：小巧的Hex文件查看器，支持自定义高亮选中展示</li><li>Burp Suite：网络安全必备</li></ul><h3 id="扩展软件"><a href="#扩展软件" class="headerlink" title="扩展软件"></a>扩展软件</h3><ul><li>Mos：鼠标优化</li><li>smartctl：磁盘检测</li><li>Blackmagic Disk Speed Test：磁盘测速</li><li>PlistEdit Pro：图形化树状图编辑macOS的plist文件</li><li>AlDente Pro：电池管理</li><li>Macs Fan Control Pro：风扇控制</li><li>Cleaner：键盘清理锁定</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;作为一个Windows的重度用户，一直很想体验一下Mac，在入手了Mac后，发现二者的工作流还是存在一些差异的。&lt;/p&gt;</summary>
    
    
    
    
    <category term="2023" scheme="http://example.com/tags/2023/"/>
    
    <category term="八月" scheme="http://example.com/tags/%E5%85%AB%E6%9C%88/"/>
    
    <category term="Mac" scheme="http://example.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>SessionManager：macOS下的终端模拟解决方案</title>
    <link href="http://example.com/2023/04/14/2023/04-14_SessionManager/"/>
    <id>http://example.com/2023/04/14/2023/04-14_SessionManager/</id>
    <published>2023-04-14T17:53:32.000Z</published>
    <updated>2024-02-29T02:06:18.676Z</updated>
    
    <content type="html"><![CDATA[<p>对我来说，没有一个好用的终端模拟软件，MBP就无法成为一个合格的生产力工具…</p><span id="more"></span><h2 id="我的需求"><a href="#我的需求" class="headerlink" title="我的需求"></a>我的需求</h2><ol><li>Session管理：支持保存Session，支持多层级分组，Session文件可编辑。           </li><li>登录脚本：支持在每次登录之后执行自定义命令，支持节点跳转。      </li><li>多窗口同时输入： 支持多窗口同时输入。       </li><li>自定义快捷键：支持Session复制，Tab切换，Tab重命名。                </li><li>高颜值：好心情的基础           </li><li>快捷命令：支持快捷命令。        </li><li>记录文本的操作日志</li><li>内嵌SFTP工具</li></ol><h2 id="软件基础"><a href="#软件基础" class="headerlink" title="软件基础"></a>软件基础</h2><ul><li>iTerm2         </li><li><a href="https://github.com/yutianqi/SessionManager">SessionManager</a>（基于Python，pexpect库，iterm2库）</li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li>Session管理<br>由SessionManager实现，通过配置文件实现Session持久化，配置文件格式为JSON，理论上支持无限层级分组支，支持手动修改，支持一键打开多个Session或按目录打开Session。          </li><li>登录脚本<br>由SessionManager实现，支持在每次登录之后通过expect/send语法执行自定义命令，支持无限节点跳转。</li><li>多窗口同时输入<br>由iTerm2原生能力实现，自定义快捷键触发，实现触发/取消多窗口同时输入。       </li><li>自定义快捷键：支持Session复制，Tab切换，Tab重命名。<br>由iTerm2+macOS原生能力实现。</li><li>高颜值<br>由iTerm2原生能力实现。</li><li>快捷命令：支持快捷命令。<br>由iTerm2原生能力实现。</li><li>记录文本的操作日志<br>由iTerm2原生能力实现。</li><li>内嵌SFTP工具<br>待实现…      </li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>安装iTerm2</li><li>下载SessionManager<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/yutianqi/SessionManager.git</span><br></pre></td></tr></table></figure></li><li>安装iTerm2 Python支持库iterm2<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install iterm2</span><br></pre></td></tr></table></figure></li><li>安装pexpect库<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pexpect</span><br></pre></td></tr></table></figure></li><li>添加环境变量<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias ssa=&quot;/home/ubuntu/code/SessionManager/ssmgr.py add&quot;</span><br><span class="line">alias ssd=&quot;/home/ubuntu/code/SessionManager/ssmgr.py delete -s&quot;</span><br><span class="line">alias ssl=&quot;/home/ubuntu/code/SessionManager/ssmgr.py list&quot;</span><br><span class="line">alias sso=&quot;/home/ubuntu/code/SessionManager/ssmgr.py open -s&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>增加Session<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssa              # </span><br><span class="line">ssa -j           # </span><br><span class="line">ssa -f           # </span><br></pre></td></tr></table></figure></li><li>删除Session<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssd [nodeId]     # </span><br></pre></td></tr></table></figure></li><li>查询Session<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssl              # </span><br><span class="line">ssl -l           # </span><br><span class="line">ssl -l [nodeId]  # </span><br></pre></td></tr></table></figure></li><li>打开Session<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sso [nodeId]     # </span><br></pre></td></tr></table></figure></li></ol><h2 id="其他APP比对"><a href="#其他APP比对" class="headerlink" title="其他APP比对"></a>其他APP比对</h2><table><thead><tr><th>APP</th><th>优点</th><th>缺点</th><th>备注</th></tr></thead><tbody><tr><td>SecureCRT</td><td>总的来说上面几点都满足了，应该是和我的需求契合度最高的了，也是我目前的选择</td><td>多窗口同时输入存在如下问题：1. 需要在单独的Command Windows进行，不支持上下查找历史命令，不支持tab联想，不支持类似Ctrl+C这种特殊命令，并且Command Windows会占用一部分额外的空间。2. 不稳定，这也是最让我无法接受的地方。Command Windows偶尔会无法输入，需要关掉再打开。在多窗口执行类似top命令后，偶现鼠标丢失，无法选择窗口文本。3. 设置例外窗口操作复杂。</td><td>xxx</td></tr><tr><td>Termius</td><td>Session只支持单一层级。</td><td>cell</td><td>xxx</td></tr><tr><td>iTerm2</td><td>不支持Session管理。</td><td>cell</td><td>xxx</td></tr><tr><td>Xshell7(CrossOver)</td><td>cell 6</td><td>cell</td><td>CrossOver官方没说支持，安装之后无法启动</td></tr><tr><td>MobaXterm(CrossOver)</td><td>cell 6</td><td>cell</td><td>CrossOver官方说支持，安装过程卡在安装.net 4.6.2</td></tr><tr><td>FinalShell</td><td>cell 6</td><td>cell</td><td>貌似已经停止维护了，而且网评资源占用很高</td></tr><tr><td>NuoShell</td><td>cell 6</td><td>cell</td><td>不支持多窗口同时输入。</td></tr><tr><td>xxxxxxxx</td><td>cell 6</td><td>cell</td><td>1.Session管理  2.登录脚本 3.多窗口同时输入 4.自定义快捷键 5.高颜值 6.支持快捷命令。7.支持记录操作日志 8.内嵌SFTP工具</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;对我来说，没有一个好用的终端模拟软件，MBP就无法成为一个合格的生产力工具…&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>macOS下的PDF打印</title>
    <link href="http://example.com/2022/11/27/2022/11-27_macOS%E4%B8%8B%E7%9A%84PDF%E6%89%93%E5%8D%B0/"/>
    <id>http://example.com/2022/11/27/2022/11-27_macOS%E4%B8%8B%E7%9A%84PDF%E6%89%93%E5%8D%B0/</id>
    <published>2022-11-27T21:21:00.000Z</published>
    <updated>2024-02-29T02:06:18.676Z</updated>
    
    <content type="html"><![CDATA[<p>这两天想在Mac上将一个可编辑的Word文件，简单的变成不可编辑的图片版PDF，但是实际情况感觉并不简单…</p><span id="more"></span><p>之前在Windows上类似的诉求都是用Foxit的虚拟打印机功能来实现的，只需要在打印的时候勾选“Print as image”即可。<br>按照类似的思路，在Mac上装了几款虚拟打印机也试了几款APP，但大多数都只能将文档转为文字版PDF，也就是是可复制的，而我的诉求是不可复制的。虽然这点可以通过APP设置文档的权限来实现，但是这样未免显得太过“刻意”…为数不多的某国产APP可以满足我的诉求，但是又要收取不便宜的订阅费，而我并不太想为这个诉求买单并安装一个额外的APP，因为，我觉得并不算太复杂…<br>将这个需求拆分一下，就简单很多了，一个是将现有的文字版PDF文档转为图片，一个是将图片重新转为PDF。前者PyMuPDF可实现，后者PyMuPDF/pillow/img2pdf均可实现，只是最终PDF文件大小和清晰度略有差异。<br><a href="https://github.com/yutianqi/FileProcessor/blob/main/pdf_processor.py">“Talk is cheap, show me the code.”</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这两天想在Mac上将一个可编辑的Word文件，简单的变成不可编辑的图片版PDF，但是实际情况感觉并不简单…&lt;/p&gt;</summary>
    
    
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
    <category term="十一月" scheme="http://example.com/tags/%E5%8D%81%E4%B8%80%E6%9C%88/"/>
    
  </entry>
  
  <entry>
    <title>macOS下的终端模拟软件</title>
    <link href="http://example.com/2022/05/04/2022/05-04_macOS%E4%B8%8B%E7%9A%84%E7%BB%88%E7%AB%AF%E6%A8%A1%E6%8B%9F%E8%BD%AF%E4%BB%B6/"/>
    <id>http://example.com/2022/05/04/2022/05-04_macOS%E4%B8%8B%E7%9A%84%E7%BB%88%E7%AB%AF%E6%A8%A1%E6%8B%9F%E8%BD%AF%E4%BB%B6/</id>
    <published>2022-05-04T21:36:53.000Z</published>
    <updated>2024-02-29T02:06:18.676Z</updated>
    
    <content type="html"><![CDATA[<p>对我来说，没有一个好用的终端模拟软件，MBP就无法成为一个合格的生产力工具…<br>如果你也有和我一样的困扰，很抱歉，这篇博客或许并不能给你一个想要的答案。<br>相比于一个答案，这篇博客更像一堆抱怨。<br>2022.05.20更新：现在有答案了。我自己写了一个<a href="https://github.com/yutianqi/SessionManager">工具</a>…</p><span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>从Windows切换到Mac之后，第一个很怀念的软件是Everything，第二个就是XShell了。<br>在网上也搜了很久，发现几个现象：</p><ol><li>部分Mac用户很骄傲，如果你用得不习惯，那是你的问题，而不是Mac的问题。</li><li>推荐最多的就是iTerm2。</li><li>无论推荐的是什么，下面都有人赞同，也有人反对。</li></ol><h1 id="我的需求"><a href="#我的需求" class="headerlink" title="我的需求"></a>我的需求</h1><p>其实归根结节就是用户群不一样，大家都在自说自话。而我也很清楚自己的需求并不算大众，从用户画像来说比较偏向运维工程师，大概可以总结为以下几点（优先级由高到低）：</p><h2 id="基本诉求"><a href="#基本诉求" class="headerlink" title="基本诉求"></a>基本诉求</h2><ol><li>Session管理<br>因为环境都在公有云Linux服务器上，而且都是7节点起步的集群。所以需要支持保存Session，多层级分组。</li><li>支持登录脚本<br>因为集群通常只有一台主节点有公网IP，其他节点都要通过主节点跳转。所以需要通过登录脚本在登录到主节点之后自动跳转到其他节点。</li><li>多窗口同时输入<br>因为同一微服务可能部署在多个节点上，并且没有使用成熟的日志分析系统，所以还有多个节点同时看日志，同时操作分析问题的场景。</li><li>自定义快捷键<br>Session复制，Tab切换，Tab重命名…</li><li>Session文件可编辑<br>因为前面所说的环境都是集群，且经常有全新IP的新环境，所以需要支持手动构造Session配置，这样在环境变更之后，可以通过类似CSV文件快速生成对应的Session配置。</li><li>稳定<br>前面一切诉求的基础。</li></ol><h2 id="加分项"><a href="#加分项" class="headerlink" title="加分项"></a>加分项</h2><ol><li>高颜值<br>好心情很重要…</li><li>支持快捷命令<br>很多冗长的命令没有必要反复输入，通常情况下，这一点可以通过alias解决，但是我面对的服务器很多都是不允许我自定义设置的。</li><li>记录文本的操作日志<br>作为小白，“偷师”利器…</li><li>内嵌SFTP工具<br>就不需要再装Transmit或者FileZilla了。并且这种内嵌SFTP工具通常都支持跳转到当前所在目录，真的很好用。</li></ol><h1 id="目前的选择"><a href="#目前的选择" class="headerlink" title="目前的选择"></a>目前的选择</h1><p>以上几个需求，在Windows上XShell，MobaXterm，SecureCRT都可以满足我的需求。但是在macOS下，目前似乎还没有，简单的试用过如下几个…</p><h2 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h2><p>总的来说上面几点都满足了，应该是和我的需求契合度最高的了，也是我目前的选择。但是多窗口同时输入存在如下问题：</p><ol><li>需要在单独的Command Windows进行，不支持上下查找历史命令，不支持tab联想，不支持类似Ctrl+C这种特殊命令，并且Command Windows会占用一部分额外的空间。</li><li>不稳定，这也是最让我无法接受的地方。Command Windows偶尔会无法输入，需要关掉再打开。在多窗口执行类似top命令后，偶现鼠标丢失，无法选择窗口文本。</li><li>设置例外窗口操作复杂。</li></ol><h2 id="Termius"><a href="#Termius" class="headerlink" title="Termius"></a>Termius</h2><p>Session只支持单一层级。</p><h2 id="iTerm2"><a href="#iTerm2" class="headerlink" title="iTerm2"></a>iTerm2</h2><p>不支持Session管理。</p><h2 id="CrossOver安装Xshell7"><a href="#CrossOver安装Xshell7" class="headerlink" title="CrossOver安装Xshell7"></a>CrossOver安装Xshell7</h2><p>CrossOver官方没说支持，安装之后无法启动…         </p><h2 id="CrossOver安装MobaXterm"><a href="#CrossOver安装MobaXterm" class="headerlink" title="CrossOver安装MobaXterm"></a>CrossOver安装MobaXterm</h2><p>CrossOver官方说支持，安装过程卡在安装.net 4.6.2…         </p><h2 id="FinalShell"><a href="#FinalShell" class="headerlink" title="FinalShell"></a>FinalShell</h2><p>貌似已经停止维护了，而且网评资源占用很高…</p><h2 id="NuoShell"><a href="#NuoShell" class="headerlink" title="NuoShell"></a>NuoShell</h2><p>不支持多窗口同时输入。</p><h2 id="NuoShell-1"><a href="#NuoShell-1" class="headerlink" title="NuoShell"></a>NuoShell</h2><p>不支持多窗口同时输入。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对我来说，没有一个好用的终端模拟软件，MBP就无法成为一个合格的生产力工具…&lt;br&gt;如果你也有和我一样的困扰，很抱歉，这篇博客或许并不能给你一个想要的答案。&lt;br&gt;相比于一个答案，这篇博客更像一堆抱怨。&lt;br&gt;2022.05.20更新：现在有答案了。我自己写了一个&lt;a href=&quot;https://github.com/yutianqi/SessionManager&quot;&gt;工具&lt;/a&gt;…&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>我的利器</title>
    <link href="http://example.com/2018/10/28/2018/10-28_%E6%88%91%E7%9A%84%E5%88%A9%E5%99%A8/"/>
    <id>http://example.com/2018/10/28/2018/10-28_%E6%88%91%E7%9A%84%E5%88%A9%E5%99%A8/</id>
    <published>2018-10-28T23:14:44.000Z</published>
    <updated>2024-02-29T02:06:18.676Z</updated>
    
    <content type="html"><![CDATA[<p>一直都很喜欢 <strong><a href="http://liqi.io/creators/" title="利器">利器</a></strong> 这个项目，在这里分享一下我自己的利器吧。</p><span id="more"></span><h4 id="介绍一下你自己和所做的工作。"><a href="#介绍一下你自己和所做的工作。" class="headerlink" title="介绍一下你自己和所做的工作。"></a>介绍一下你自己和所做的工作。</h4><p>我希望能够在和别人做自我介绍的时候，可以说自己是一名软件研发工程师。</p><h4 id="你都在使用哪些硬件？"><a href="#你都在使用哪些硬件？" class="headerlink" title="你都在使用哪些硬件？"></a>你都在使用哪些硬件？</h4><ul><li><p>ThinkPad X1 Carbon 2018<br>公司配的电脑，我喜欢自己的生活中只有一台电脑，我不排斥工作和生活混在一起。</p></li><li><p>iPhone 5s<br>现在已经是2018年10月，我还在用iPhone 5s 16G。这是我的第二部手机，已经陪伴我5年多了，前段时间第二次换了电池。因为平时的重心都在电脑上，所以并不会感觉这部手机不够用。</p></li><li><p>FILCO忍者二代机械键盘<br>红轴，双模，无刻，唯一的遗憾是当初犹豫再三之后还是选了104键的版本。现在想想，无论是对于有限的桌面空间，还是为了方便携带，87键都是一个更好的选择。小键盘输入数字的确更加方便，但是我对这个的需求其实并没有当初想的那么强烈，尤其是在已经习惯了笔记本的布局之后。</p></li><li><p>Kindle Paperwhite<br>间歇性疯狂读书。</p></li><li><p>Sony运动耳机 (NW-WS414)<br>女朋友送的第一个生日礼物。</p></li></ul><ul><li>Raspberry Pi 3B<br>当初心心念念，现在因为找不到刚需使用场景而吃灰中。</li></ul><h4 id="软件呢？"><a href="#软件呢？" class="headerlink" title="软件呢？"></a>软件呢？</h4><ul><li>Chrome</li><li>cmder</li><li>Notepad++</li><li>SublimeText3</li><li>VSCode</li><li>IntelliJ IDEA</li><li>SecureCRT</li><li>Everything</li><li>BeyondCompare</li><li>Navicat Premium 12</li><li>Bandizip</li><li>Postman</li><li>Shadowsocks</li><li>SpeedPan</li><li>FSCapture</li></ul><h4 id="你最理想的工作环境是什么？"><a href="#你最理想的工作环境是什么？" class="headerlink" title="你最理想的工作环境是什么？"></a>你最理想的工作环境是什么？</h4><p>曾经有一天，突然觉得美剧<Silicon Valley>中，Richard他们一起工作生活的那个House就是我最渴望的工作环境。<br><img src="/images/siliconvalley.jpg" alt="&quot;siliconvalley&quot;"></p><h4 id="你平时获得工作灵感的方式有哪些？"><a href="#你平时获得工作灵感的方式有哪些？" class="headerlink" title="你平时获得工作灵感的方式有哪些？"></a>你平时获得工作灵感的方式有哪些？</h4><p>逛<a href="https://www.zhihu.com/">知乎</a>，<a href="https://www.v2ex.com/">V2EX</a>。有时候会觉得，可能我一直都未曾真正有过灵感。</p><h4 id="推荐一件生活中的利器给大家。"><a href="#推荐一件生活中的利器给大家。" class="headerlink" title="推荐一件生活中的利器给大家。"></a>推荐一件生活中的利器给大家。</h4><p>身边越来越多的人开始切换到了Windows10，每次看到别人任务栏上不曾使却又存在着的搜索框，我就会在心里小小的“鄙视”一下这个人。<a href="https://jingyan.baidu.com/article/a378c960a7f625b32828303d.html"><strong>单击三次鼠标即可关闭</strong></a>，不要让它再占用你“寸土寸金”的任务栏啦！<br>还有将键盘上的CapsLock键映射为Ctrl键，相信我，世界从此不同。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一直都很喜欢 &lt;strong&gt;&lt;a href=&quot;http://liqi.io/creators/&quot; title=&quot;利器&quot;&gt;利器&lt;/a&gt;&lt;/strong&gt; 这个项目，在这里分享一下我自己的利器吧。&lt;/p&gt;</summary>
    
    
    
    
    <category term="程序员的自我修养" scheme="http://example.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/"/>
    
  </entry>
  
  <entry>
    <title>树莓派使用bypy实现百度网盘上传下载</title>
    <link href="http://example.com/2018/03/19/2018/03-19_%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%AE%9E%E7%8E%B0%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/"/>
    <id>http://example.com/2018/03/19/2018/03-19_%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%AE%9E%E7%8E%B0%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/</id>
    <published>2018-03-19T20:12:55.000Z</published>
    <updated>2024-02-29T02:06:18.676Z</updated>
    
    <content type="html"><![CDATA[<p>bypy是百度网盘的Python客户端，本文主要记录在树莓派上使用bypy实现百度网盘上传下载配置过程。</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>已安装Python</li><li>已安装requests类库(sudo pip install requests)</li></ul><h2 id="安装bypy"><a href="#安装bypy" class="headerlink" title="安装bypy"></a>安装bypy</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install bypy                                       # 安装bypy</span><br></pre></td></tr></table></figure><h2 id="验证bypy并授权"><a href="#验证bypy并授权" class="headerlink" title="验证bypy并授权"></a>验证bypy并授权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo bypy.py info                                           # 验证bypy并授权</span><br><span class="line">python -m bypy info</span><br></pre></td></tr></table></figure><p>复制”Please Visit:”下的网址，登陆百度账号，并复制授权码。<br>授权成功后会看到授权网盘的总容量和已使用容量等信息。</p><h2 id="bypy相关指令"><a href="#bypy相关指令" class="headerlink" title="bypy相关指令"></a>bypy相关指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bypy.py upload                                              # 把当前目录同步到云盘</span><br><span class="line">bypy.py downdir                                             # 把云盘内容同步到本地来</span><br><span class="line">bypy.py syncdown                                            # 把云盘内容同步到本地来</span><br><span class="line">bypy.py compare                                             # 比较本地当前目录和云盘根目录</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>百度网盘下bypy同步路径：/我的应用数据/bypy</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/houtianze/bypy">bypy Github</a></li><li><a href="https://www.cnblogs.com/xiaowuyi/p/4160397.html">利用bypy实现树莓派NAS同步百度云</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;bypy是百度网盘的Python客户端，本文主要记录在树莓派上使用bypy实现百度网盘上传下载配置过程。&lt;/p&gt;</summary>
    
    
    
    
    <category term="RaspberryPi" scheme="http://example.com/tags/RaspberryPi/"/>
    
    <category term="百度网盘" scheme="http://example.com/tags/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>Windows离线安装MySQL5.7.21</title>
    <link href="http://example.com/2018/02/28/2018/02-28_Windows%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL5-7-21/"/>
    <id>http://example.com/2018/02/28/2018/02-28_Windows%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL5-7-21/</id>
    <published>2018-02-28T16:53:56.000Z</published>
    <updated>2024-12-02T07:03:31.652Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录Windows环境下离线安装MySQL数据库过程。</p><span id="more"></span><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul><li>OS：Windows 7 64bit</li><li>MySQL：5.7.21</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><a href="https://dev.mysql.com/downloads/mysql/5.7.html#downloads">官网</a>下载MySQL压缩文件，选择Windows (x86, 64-bit), ZIP Archive版本。             </li><li>解压压缩文件到自定义安装目录，如D:\Program Files，解压之后的MySQL目录为D:\Program Files\mysql-5.7.21-winx64。      </li><li>在MySQL目录下新建配置文件my.ini，文件内容如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#########################################################</span><br><span class="line">[mysql] </span><br><span class="line"># MySQL客户端默认字符集 </span><br><span class="line">default-character-set=utf8 </span><br><span class="line">[mysqld] </span><br><span class="line"># mysqld服务端口 </span><br><span class="line">port = 3306 </span><br><span class="line"># MySQL安装目录，需要根据实际情况填写</span><br><span class="line">basedir=D:\Program Files\mysql-5.7.21-winx64            </span><br><span class="line"># MySQL数据库数据存放目录，需要根据实际情况填写</span><br><span class="line">datadir=D:\Program Files\mysql-5.7.21-winx64\data       </span><br><span class="line"># 允许最大连接数 </span><br><span class="line">max_connections=200 </span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集 </span><br><span class="line">character-set-server=utf8 </span><br><span class="line"># 创建新表时将使用的默认存储引擎 </span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">#########################################################</span><br></pre></td></tr></table></figure><ol start="4"><li>新增环境变量MYSQL_HOME<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">变量名：MYSQL_HOME</span><br><span class="line">变量值：D:\Program Files\mysql-5.7.21-winx64</span><br></pre></td></tr></table></figure></li><li>修改环境变量Path<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">变量名：Path</span><br><span class="line">变量值：在原有Path基础上新增;%MYSQL_HOME%\bin;</span><br></pre></td></tr></table></figure></li><li>安装mysqld服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld install </span><br></pre></td></tr></table></figure></li><li>生成data目录<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql       # MySQL 5.7.16后默认不提供data目录</span><br></pre></td></tr></table></figure></li><li>启动mysqld服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br><span class="line">net stop mysql                                  # 需要关闭mysql服务时执行</span><br></pre></td></tr></table></figure></li><li>登录MySQL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p                                # 首次登录需要设置密码</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要记录Windows环境下离线安装MySQL数据库过程。&lt;/p&gt;</summary>
    
    
    
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
    <category term="Database" scheme="http://example.com/tags/Database/"/>
    
    <category term="Manual" scheme="http://example.com/tags/Manual/"/>
    
  </entry>
  
  <entry>
    <title>Python使用cx_Oracle操作Oracle数据库</title>
    <link href="http://example.com/2018/02/13/2022/11-27_Python%E4%BD%BF%E7%94%A8cx-Oracle%E6%93%8D%E4%BD%9COracle%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://example.com/2018/02/13/2022/11-27_Python%E4%BD%BF%E7%94%A8cx-Oracle%E6%93%8D%E4%BD%9COracle%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2018-02-13T01:17:19.000Z</published>
    <updated>2024-02-29T02:06:18.672Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录Python使用cx_Oracle组件操作Oracle数据库的过程。</p><span id="more"></span><h2 id="–-gt-Windows"><a href="#–-gt-Windows" class="headerlink" title="–&gt; Windows"></a>–&gt; Windows</h2><h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul><li>OS：Windows 7 64bit</li><li>Python：2.7.14 64bit</li><li>cx_Oracle：6.1-cp27-cp27m-win_amd64</li><li>instantclient：basic-windows.x64-12.2.0.1.0</li></ul><h3 id="安装cx-Oracle"><a href="#安装cx-Oracle" class="headerlink" title="安装cx_Oracle"></a>安装cx_Oracle</h3><h4 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h4><ul><li>使用如下指令安装cx_Oracle<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install cx_Oracle</span><br></pre></td></tr></table></figure></li></ul><h4 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h4><ul><li>打开 <a href="https://pypi.python.org/pypi/cx_Oracle">https://pypi.python.org/pypi/cx_Oracle</a>    </li><li>下载cx_Oracle-6.1-cp27-cp27m-win_amd64.whl文件      </li><li>使用如下指令安装whl文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install cx_Oracle-6.1-cp27-cp27m-win_amd64.whl</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装Oralce客户端"><a href="#安装Oralce客户端" class="headerlink" title="安装Oralce客户端"></a>安装Oralce客户端</h3><ul><li>打开 <a href="http://www.oracle.com/technetwork/topics/winx64soft-089540.html">http://www.oracle.com/technetwork/topics/winx64soft-089540.html</a>     </li><li>下载instantclient-basic-windows.x64-12.2.0.1.0.zip文件   </li><li>解压zip文件       </li><li>将解压目录添加为环境变量ORACLE_HOME       </li><li>将环境变量ORACLE_HOME添加到环境变量Path       </li></ul><h2 id="–-gt-Linux"><a href="#–-gt-Linux" class="headerlink" title="–&gt; Linux"></a>–&gt; Linux</h2><h3 id="环境信息-1"><a href="#环境信息-1" class="headerlink" title="环境信息"></a>环境信息</h3><ul><li>OS：Linux dsic1h1 3.10.0-229.x86_64 </li><li>Python：2.7.14 64bit</li><li>cx_Oracle：6.1-cp27-cp27m-manylinux1_x86_64.whl</li><li>instantclient：basic-linux.x64-12.2.0.1.0</li></ul><h3 id="安装cx-Oracle-1"><a href="#安装cx-Oracle-1" class="headerlink" title="安装cx_Oracle"></a>安装cx_Oracle</h3><h4 id="pip安装-1"><a href="#pip安装-1" class="headerlink" title="pip安装"></a>pip安装</h4><ul><li>使用如下指令安装cx_Oracle<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install cx_Oracle</span><br></pre></td></tr></table></figure></li></ul><h4 id="手动安装-1"><a href="#手动安装-1" class="headerlink" title="手动安装"></a>手动安装</h4><ul><li>打开 <a href="https://pypi.python.org/pypi/cx_Oracle">https://pypi.python.org/pypi/cx_Oracle</a>    </li><li>下载cx_Oracle-6.1-cp27-cp27m-manylinux1_x86_64.whl文件      </li><li>上传并使用如下指令安装whl文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install cx_Oracle-6.1-cp27-cp27m-manylinux1_x86_64.whl</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装Oralce客户端-1"><a href="#安装Oralce客户端-1" class="headerlink" title="安装Oralce客户端"></a>安装Oralce客户端</h3><ul><li>打开 <a href="http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html">http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html</a>     </li><li>下载instantclient-basic-linux.x64-12.2.0.1.0.zip文件   </li><li>上传并解压zip文件       </li><li>新增环境变量LD_LIBRARY_PATH<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 可将以下记录写入环境变量配置文件，如~/.bashrc，~/.profile</span><br><span class="line"># 其中/tmp/instantclient_12_2为instantclient解压目录</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:/tmp/instantclient_12_2       </span><br></pre></td></tr></table></figure></li></ul><h2 id="–-gt-Python下执行测试验证"><a href="#–-gt-Python下执行测试验证" class="headerlink" title="–&gt; Python下执行测试验证"></a>–&gt; Python下执行测试验证</h2><ul><li>相关代码如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import cx_Oracle  </span><br><span class="line">dsn = cx_Oracle.makedsn(&quot;192.168.0.233&quot;,            # 数据库主机IP</span><br><span class="line">                        1521,                       # 数据库服务端口</span><br><span class="line">                        &quot;SID&quot;)                      # 数据库实例SID</span><br><span class="line">conn = cx_Oracle.connect(&quot;username&quot;,                # 连接用户</span><br><span class="line">                         &quot;passwd&quot;,                  # 用户密码</span><br><span class="line">                         dsn)                       </span><br><span class="line">curs = conn.cursor()  </span><br><span class="line">sql = &quot;select * from TBL_NAME where rownum&lt;10&quot;</span><br><span class="line">rr = curs.execute(sql)  </span><br><span class="line">row = curs.fetchone()  </span><br><span class="line">print row[0]  </span><br><span class="line">curs.close()                                                  </span><br><span class="line">conn.close()  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要记录Python使用cx_Oracle组件操作Oracle数据库的过程。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Oracle" scheme="http://example.com/tags/Oracle/"/>
    
    <category term="cx_Oracle" scheme="http://example.com/tags/cx-Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Raspberry Pi配置记录</title>
    <link href="http://example.com/2018/02/13/2018/02-13_Raspberry-Pi/"/>
    <id>http://example.com/2018/02/13/2018/02-13_Raspberry-Pi/</id>
    <published>2018-02-13T00:58:37.000Z</published>
    <updated>2024-02-29T02:06:18.676Z</updated>
    
    <content type="html"><![CDATA[<p>本文为Raspberry Pi配置记录。</p><span id="more"></span><h3 id="1-系统烧录"><a href="#1-系统烧录" class="headerlink" title="1 系统烧录"></a>1 系统烧录</h3><h4 id="1-1-下载树莓派系统"><a href="#1-1-下载树莓派系统" class="headerlink" title="1.1 下载树莓派系统"></a>1.1 下载树莓派系统</h4><p><a href="https://www.raspberrypi.org/downloads/">RaspberryPi官网系统下载页面</a>       </p><h4 id="1-2-下载Win32DiskImager"><a href="#1-2-下载Win32DiskImager" class="headerlink" title="1.2 下载Win32DiskImager"></a>1.2 下载Win32DiskImager</h4><p><a href="http://sourceforge.net/projects/win32diskimager/files/Archive/win32diskimager-v0.9-binary.zip/download">下载镜像烧录工具Win32DiskImager</a>      </p><h4 id="1-3烧录镜像到SD卡"><a href="#1-3烧录镜像到SD卡" class="headerlink" title="1.3烧录镜像到SD卡"></a>1.3烧录镜像到SD卡</h4><ul><li>解压.zip镜像压缩文件</li><li>启动win32diskimager</li><li>选择.img镜像文件(Image)</li><li>选择写入设备(Device)</li><li>写入(Write)</li></ul><h3 id="2-开启ssh服务"><a href="#2-开启ssh服务" class="headerlink" title="2 开启ssh服务"></a>2 开启ssh服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd start </span><br></pre></td></tr></table></figure><h3 id="3-命令行下配置wifi信息"><a href="#3-命令行下配置wifi信息" class="headerlink" title="3 命令行下配置wifi信息"></a>3 命令行下配置wifi信息</h3><h3 id="4-软件源更改"><a href="#4-软件源更改" class="headerlink" title="4 软件源更改"></a>4 软件源更改</h3><p>由于树莓派系统默认官方软件源在国外，连接不稳定且速度慢，所以安装初次进入系统后，建议修改软件源。<br>以下以中国科学技术大学Raspbian软件源为例：<a href="http://mirrors.ustc.edu.cn/raspbian/raspbian/">http://mirrors.ustc.edu.cn/raspbian/raspbian/</a></p><h4 id="4-1-操作指令"><a href="#4-1-操作指令" class="headerlink" title="4.1 操作指令"></a>4.1 操作指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 该脚本适配最新的 2017-11-29-raspbian-stretch(基于Debian9)</span><br><span class="line">sudo -s</span><br><span class="line">echo -e &quot;deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi \n deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi&quot; &gt; /etc/apt/sources.list</span><br><span class="line">echo -e &quot;deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui&quot; &gt; /etc/apt/sources.list.d/raspi.list</span><br><span class="line">exit</span><br><span class="line">sudo apt update &amp;&amp; sudo apt -y upgrade</span><br><span class="line"></span><br><span class="line"># 该脚本适配 2017-06-21-raspbian-jessie(基于Debian8)</span><br><span class="line">sudo -s</span><br><span class="line">echo -e &quot;deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ jessie main non-free contrib \n deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ jessie main non-free contrib&quot; &gt; /etc/apt/sources.list</span><br><span class="line">echo -e &quot;deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ jessie main&quot; &gt; /etc/apt/sources.list.d/raspi.list</span><br><span class="line">exit</span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get -y upgrade</span><br><span class="line"></span><br><span class="line"># 非该版本请自行打开（/etc/apt/sources.list 和 /etc/apt/sources.list.d/raspi.list）替换网址即可</span><br></pre></td></tr></table></figure><h4 id="4-2-其它软件源"><a href="#4-2-其它软件源" class="headerlink" title="4.2 其它软件源"></a>4.2 其它软件源</h4><table><thead><tr><th>Raspbian软件源</th><th>URL</th></tr></thead><tbody><tr><td>中山大学</td><td><a href="http://mirror.sysu.edu.cn/raspbian/raspbian/">http://mirror.sysu.edu.cn/raspbian/raspbian/</a></td></tr><tr><td>清华大学</td><td><a href="http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/">http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/</a></td></tr><tr><td>华中科技大学</td><td><a href="http://mirrors.hustunique.com/raspbian/raspbian/Arch">http://mirrors.hustunique.com/raspbian/raspbian/Arch</a></td></tr><tr><td>Linux ARM</td><td><a href="http://mirrors.hustunique.com/archlinuxarm/">http://mirrors.hustunique.com/archlinuxarm/</a></td></tr><tr><td>大连东软信息学院</td><td><a href="http://mirrors.neusoft.edu.cn/raspbian/raspbian/">http://mirrors.neusoft.edu.cn/raspbian/raspbian/</a></td></tr><tr><td>重庆大学</td><td><a href="http://mirrors.cqu.edu.cn/Raspbian/raspbian/">http://mirrors.cqu.edu.cn/Raspbian/raspbian/</a></td></tr><tr><td>阿里云</td><td><a href="http://mirrors.aliyun.com/raspbian/raspbian/">http://mirrors.aliyun.com/raspbian/raspbian/</a></td></tr></tbody></table><h3 id="5-中文支持及中文输入法"><a href="#5-中文支持及中文输入法" class="headerlink" title="5 中文支持及中文输入法"></a>5 中文支持及中文输入法</h3><h4 id="5-1-操作指令"><a href="#5-1-操作指令" class="headerlink" title="5.1 操作指令"></a>5.1 操作指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y ttf-wqy-zenhei</span><br><span class="line">sudo apt-get install -y scim-pinyin</span><br></pre></td></tr></table></figure><h3 id="6-安装vim"><a href="#6-安装vim" class="headerlink" title="6 安装vim"></a>6 安装vim</h3><h4 id="6-1-操作指令"><a href="#6-1-操作指令" class="headerlink" title="6.1 操作指令"></a>6.1 操作指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y vim</span><br></pre></td></tr></table></figure><h4 id="6-2-如出现如下错误，先卸载-vim-common-再安装vim即可"><a href="#6-2-如出现如下错误，先卸载-vim-common-再安装vim即可" class="headerlink" title="6.2 如出现如下错误，先卸载 vim-common 再安装vim即可"></a>6.2 如出现如下错误，先卸载 vim-common 再安装vim即可</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The following packages have unmet dependencies: </span><br><span class="line">vim : Depends: vim-common (= 2:7.4.488-7+deb8u3) but 2:8.0.0197-4 is to be installed </span><br><span class="line">E: Unable to correct problems, you have held broken packages.</span><br><span class="line"></span><br><span class="line">sudo apt-get remove vim-common</span><br><span class="line">sudo apt-get install -y vim</span><br></pre></td></tr></table></figure><h3 id="7-修改时区-时间"><a href="#7-修改时区-时间" class="headerlink" title="7 修改时区/时间"></a>7 修改时区/时间</h3><h4 id="7-1-操作指令"><a href="#7-1-操作指令" class="headerlink" title="7.1 操作指令"></a>7.1 操作指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure tzdata</span><br><span class="line">sudo apt-get install ntpdate</span><br></pre></td></tr></table></figure><h3 id="8-通过xrdp服务windows远程桌面连接树莓派"><a href="#8-通过xrdp服务windows远程桌面连接树莓派" class="headerlink" title="8 通过xrdp服务windows远程桌面连接树莓派"></a>8 通过xrdp服务windows远程桌面连接树莓派</h3><h4 id="8-1-操作指令"><a href="#8-1-操作指令" class="headerlink" title="8.1 操作指令"></a>8.1 操作指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 安装tightvncserver</span><br><span class="line">sudo apt-get install tightvncserver</span><br><span class="line"># 安装xrdp服务</span><br><span class="line">sudo apt-get install xrdp</span><br><span class="line"># 如已开启防火墙ufw，则需打开服务器上的远程桌面访问端口，并重启服务</span><br><span class="line">sudo ufw allow 3389</span><br><span class="line">sudo service ufw restart</span><br><span class="line"># 重启xrdp服务</span><br><span class="line">sudo service xrdp restart </span><br></pre></td></tr></table></figure><h3 id="9-U盘操作"><a href="#9-U盘操作" class="headerlink" title="9 U盘操作"></a>9 U盘操作</h3><h4 id="9-1-挂载U盘"><a href="#9-1-挂载U盘" class="headerlink" title="9.1 挂载U盘"></a>9.1 挂载U盘</h4><ul><li>插入U盘，执行fdisk -l查看U盘信息<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># /dev/mmc表示TF卡</span><br><span class="line"># /dev/sda/表示第一个硬件(U盘)</span><br><span class="line"># 以下/dev/sda1即为U盘第一个(也是唯一一个)分区</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 7.5 GiB, 8022654976 bytes, 15669248 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0xcad4ebea</span><br><span class="line"></span><br><span class="line">Device     Boot Start      End  Sectors  Size Id Type</span><br><span class="line">/dev/sda1  *      256 15669247 15668992  7.5G  7 HPFS/NTFS/exFAT</span><br></pre></td></tr></table></figure></li><li>创建挂载路径<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/usb_flash</span><br></pre></td></tr></table></figure></li><li>挂载设备<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt/usb_flash/                     # 普通挂载</span><br><span class="line">mount -o uid=pi,gid=pi /dev/sda1 /mnt/usb_flash/    # 使用特定配置挂载</span><br></pre></td></tr></table></figure></li><li>如果U盘设备为NTFS格式，默认只具备读权限，如需写入权限，需要额外安装软件包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ntfs-3g</span><br></pre></td></tr></table></figure></li></ul><h4 id="9-2-卸载U盘"><a href="#9-2-卸载U盘" class="headerlink" title="9.2 卸载U盘"></a>9.2 卸载U盘</h4><ul><li>卸载设备<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/usb_flash                               # 普通卸载</span><br><span class="line">lsof | grep /mnt/usb_flash                          # 查找并杀掉占用进程后卸载</span><br><span class="line">kill -9 [PID]                                       # [PID]为lsof指令查找到的进程ID</span><br><span class="line">umount /mnt/usb_flash</span><br></pre></td></tr></table></figure></li></ul><h4 id="9-3-格式化U盘"><a href="#9-3-格式化U盘" class="headerlink" title="9.3 格式化U盘"></a>9.3 格式化U盘</h4><ul><li>umount卸载分区</li><li>fdisk -l查看设备序号</li><li>将U盘格式化为FAT32格式<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.vfat -F 32 /dev/sda1                           # /dev/sda1为实际待格式化U盘设备</span><br></pre></td></tr></table></figure></li><li>将U盘格式化为NTFS格式<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ntfsprogs                           # 安装NTFS读写工具</span><br><span class="line">mkfs.ntfs /dev/sda1                                 </span><br></pre></td></tr></table></figure></li><li>将U盘格式化为Linux EXT格式<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ext4 /dev/sda1                            # 格式化为ext4分区 </span><br><span class="line">sudo mkfs.ext3 /dev/sda1                            # 格式化为ext3分区 </span><br><span class="line">sudo mkfs.ext2 /dev/sda1                            # 格式化为ext2分区 </span><br></pre></td></tr></table></figure></li></ul><h3 id="10-连接电视"><a href="#10-连接电视" class="headerlink" title="10 连接电视"></a>10 连接电视</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># vi config.txt</span><br><span class="line"></span><br><span class="line">hdmi_force_hotplug=1</span><br><span class="line">config_hdmi_boost=4</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://blog.csdn.net/kxwinxp/article/details/78370980">树莓派3B+软件源更改</a></li><li><a href="http://blog.csdn.net/guyang1995/article/details/53908080">树莓派换源(用的是阿里的源)</a></li><li><a href="http://shumeipai.nxez.com/2013/08/31/raspbian-chinese-software-source.html">Raspbian中国软件源</a></li><li><a href="https://www.cnblogs.com/edgexie/p/6527992.html">windows远程桌面连接树莓派通过xrdp服务</a></li><li><a href="http://shumeipai.nxez.com/2013/09/08/raspberry-pi-to-mount-the-removable-hard-disk.html">给树莓派挂载移动硬盘或U盘</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文为Raspberry Pi配置记录。&lt;/p&gt;</summary>
    
    
    
    
    <category term="RaspberryPi" scheme="http://example.com/tags/RaspberryPi/"/>
    
  </entry>
  
  <entry>
    <title>使用Github Pages创建个人博客</title>
    <link href="http://example.com/2017/11/21/2017/11-21_%E4%BD%BF%E7%94%A8Github%20Pages%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2017/11/21/2017/11-21_%E4%BD%BF%E7%94%A8Github%20Pages%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2017-11-21T10:40:29.000Z</published>
    <updated>2024-12-03T02:11:15.960Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo为一快速、简洁且高效的博客框架。<br>本文主要简单记录了通过Hexo，借助Github Pages搭建个人博客，并配置主题为NexT的过程，方便后续自己在新环境上重新部署。<br>也因此有些操作可能不够详尽，并且可能已经不是当下的最佳实践了，请谨慎阅读。</p><span id="more"></span><h1 id="创建并配置Github账号"><a href="#创建并配置Github账号" class="headerlink" title="创建并配置Github账号"></a>创建并配置Github账号</h1><h3 id="创建Github账号"><a href="#创建Github账号" class="headerlink" title="创建Github账号"></a>创建Github账号</h3><p>访问<a href="www.github.com">Github官网</a>进行注册</p><h3 id="创建GitPages仓库"><a href="#创建GitPages仓库" class="headerlink" title="创建GitPages仓库"></a>创建GitPages仓库</h3><ol><li>创建与账号 <strong>同名</strong> 的Repository，用于存储博客数据，例如GitHub帐号是yourid，则新建的Repository名称应为yourid.github.io       </li><li>浏览器访问yourid.github.io，如果能够正常访问，则证明GitPages创建成功</li></ol><h3 id="生成本地SSH-Key"><a href="#生成本地SSH-Key" class="headerlink" title="生成本地SSH Key"></a>生成本地SSH Key</h3><ol><li>本地生成一个SSH Key，用于后续推送页面文件到GitHub <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Email&quot;                        # Email为GitHub的注册邮箱</span><br></pre></td></tr></table></figure></li><li>根据页面提示输入相关信息，可以连续回车采取默认配置</li><li>确认~/.ssh/目录下生成公钥文件id_rsa.pub和私钥文件id_rsa</li></ol><h3 id="添加公钥到Github账户"><a href="#添加公钥到Github账户" class="headerlink" title="添加公钥到Github账户"></a>添加公钥到Github账户</h3><ol><li>打开公钥~/.ssh/id_rsa.pub，复制文件内容</li><li>打开Github官网，登录后进入到个人设置(点击头像-&gt;setting)</li><li>点击右侧的SSH Keys，点击Add SSH key</li><li>填写Title之后，将之前复制的内容粘贴到Key框中</li><li>点击Add key提交</li></ol><h3 id="测试SSH-Key是否配置成功"><a href="#测试SSH-Key是否配置成功" class="headerlink" title="测试SSH Key是否配置成功"></a>测试SSH Key是否配置成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 本地执行如下代码</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line">Hi yourid! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如提示以上信息，则证明ssh配置成功</span></span><br></pre></td></tr></table></figure><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><h3 id="安装并配置Git"><a href="#安装并配置Git" class="headerlink" title="安装并配置Git"></a>安装并配置Git</h3><ol><li>下载并安装Git</li><li>配置Git <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Username&quot;            # Username为GitHub的注册用户名</span><br><span class="line">git config --global user.email &quot;Email&quot;              # Email为GitHub的注册邮箱</span><br></pre></td></tr></table></figure></li><li>确认配置 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list                                   # 查看已设配置(Username,Email)是否正确     </span><br></pre></td></tr></table></figure></li></ol><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><a href="https://nodejs.org/en/" title="Node.js下载链接">下载</a>并安装Node.js</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo-deployer-git                       # 安装hexo-deployer-git插件</span><br></pre></td></tr></table></figure><h1 id="Hexo建站"><a href="#Hexo建站" class="headerlink" title="Hexo建站"></a>Hexo建站</h1><h3 id="初始化hexo工程"><a href="#初始化hexo工程" class="headerlink" title="初始化hexo工程"></a>初始化hexo工程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd C:/hexo                                          # 切换到本地目录</span><br><span class="line">hexo init C:/hexo                                   # 进行Hexo初始化</span><br><span class="line">npm install                                         # 安装</span><br></pre></td></tr></table></figure><p>如果Hexo安装成功，则在本地Hexo目录下的目录结构如下，详细文件含义见<a href="https://hexo.io/zh-cn/docs/setup.html">Hexo官方文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml                                     # 网站配置文件，可在此配置大部分的参数</span><br><span class="line">├── package.json </span><br><span class="line">├── scaffolds                                       # 模板文件存放路径，新增文章时Hexo会根据scaffold创建文件</span><br><span class="line">├── source                                          # 用户资源存放路径</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes                                          # 网站主题存放路径，Hexo会根据主题来生成静态页面</span><br></pre></td></tr></table></figure><h3 id="本地验证"><a href="#本地验证" class="headerlink" title="本地验证"></a>本地验证</h3><p>本地启动默认的静态网站。访问地址为：<a href="http://localhost:4000/">http://localhost:4000/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --debug</span><br></pre></td></tr></table></figure><h3 id="配置部署信息"><a href="#配置部署信息" class="headerlink" title="配置部署信息"></a>配置部署信息</h3><p>打开本地Hexo目录中的_config.yml文件，找到如下配置并根据注释说明更新</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span>                                         <span class="comment"># 在yml文件中，:后面需要要带空格 </span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:yourid/yourid.github.io</span>      <span class="comment"># 其中yourid为GitHub的注册用户名  </span></span><br></pre></td></tr></table></figure><h3 id="生成静态文件并部署到GitPages"><a href="#生成静态文件并部署到GitPages" class="headerlink" title="生成静态文件并部署到GitPages"></a>生成静态文件并部署到GitPages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd c:/hexo                                          # 进入hexo工程根目录</span><br><span class="line">hexo generate                                       # 编译本地内容并生成静态文件</span><br><span class="line">hexo deploy                                         # 部署静态网页文件到GitHub</span><br></pre></td></tr></table></figure><p>此时访问 <a href="http://yourid.github.io/">http://yourid.github.io</a> 可以看到默认的Hexo首页        </p><h1 id="Hexo常用操作"><a href="#Hexo常用操作" class="headerlink" title="Hexo常用操作"></a>Hexo常用操作</h1><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;postname&quot;                                   # 新增文章</span><br></pre></td></tr></table></figure><p>命令执行后，会在Hexo的 source_post 文件夹下新建一个名为”postname.md”的文件，也可以直接在Hexo的 source_post 文件夹下新建.md结尾的文件<br>新增文件后重新进行编译和部署以在GitHub Pages上生效    </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate                                       # 编译本地内容并生成静态文件</span><br><span class="line">hexo deploy                                         # 部署静态网页文件到GitHub</span><br></pre></td></tr></table></figure><h1 id="更新Hexo主题"><a href="#更新Hexo主题" class="headerlink" title="更新Hexo主题"></a>更新Hexo主题</h1><h3 id="下载NexT主题"><a href="#下载NexT主题" class="headerlink" title="下载NexT主题"></a>下载NexT主题</h3><ol><li>下载主题文件，<a href="https://github.com/iissnan/hexo-theme-next/releases">5.1.1版本下载地址</a>    </li><li>解压文件，重命名为next，拷贝到 C:\hexo\themes\ 目录下</li></ol><h3 id="修改Hexo主题为NexT"><a href="#修改Hexo主题为NexT" class="headerlink" title="修改Hexo主题为NexT"></a>修改Hexo主题为NexT</h3><p>打开C:\Hexo下的_config.yml文件，按照如下配置，找到theme字段，将其修改为next   </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: http://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><h1 id="增加搜索功能"><a href="#增加搜索功能" class="headerlink" title="增加搜索功能"></a>增加搜索功能</h1><ol><li>安装插件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li>全局配置文件_config.yml，新增如下内容 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li><li>修改主题配置文件 themes[主题名]_config.yml，将local_search的enable改为true <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="增加Gitalk评论系统"><a href="#增加Gitalk评论系统" class="headerlink" title="增加Gitalk评论系统"></a>增加Gitalk评论系统</h1><ol><li>Github新增OAuth Apps<br> 打开<a href="https://github.com/settings/developers%EF%BC%8C%E9%80%89%E6%8B%A9OAuth">https://github.com/settings/developers，选择OAuth</a> Apps，点击 New OAuth App</li><li>根据实际情况填写    <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Application name：应用名称    </span><br><span class="line">Homepage URL：主页地址，填写博客地址即可    </span><br><span class="line">Application description：描述     </span><br><span class="line">Application callback URL：应用回调地址，填写博客地址即可</span><br></pre></td></tr></table></figure></li><li>创建APP后，记录client_id，并生成新的client_secret</li><li>修改主题配置文件 themes[主题名]_config.yml，在 # Gitalk 字段添加如下配置 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github_id:</span> [<span class="string">你的Github</span> <span class="string">ID</span>]</span><br><span class="line">  <span class="attr">repo:</span> [<span class="string">repo名，后续评论会以issues的形式生成到对应的repo下</span>]</span><br><span class="line">  <span class="attr">client_id:</span> [<span class="string">上一步创建的client_id</span>]</span><br><span class="line">  <span class="attr">client_secret:</span> [<span class="string">上一步生成的client_secret</span>]</span><br><span class="line">  <span class="attr">admin_user:</span> [<span class="string">你的Github</span> <span class="string">ID</span>]</span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h1 id="添加网易云音乐"><a href="#添加网易云音乐" class="headerlink" title="添加网易云音乐"></a>添加网易云音乐</h1><p>直接在md正文中插入如下格式的网易云音乐外链</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">allow</span>=<span class="string">&quot;autoplay&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">900</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=355992&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="添加本地音乐"><a href="#添加本地音乐" class="headerlink" title="添加本地音乐"></a>添加本地音乐</h1><ol><li>安装插件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer </span><br></pre></td></tr></table></figure></li><li>使用 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加单曲 --&gt;</span></span><br><span class="line">&#123;% aplayer &quot;歌曲名称&quot; &quot;作者&quot; &quot;音乐_url&quot; &quot;封面图片_url&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加歌单 --&gt;</span></span><br><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,</span><br><span class="line">    &quot;autoplay&quot;: true,</span><br><span class="line">    &quot;showlrc&quot;: 3,</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;平凡之路&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;朴树&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;http://og9ocpmwk.bkt.clouddn.com/%E5%B9%B3%E5%87%A1%E4%B9%8B%E8%B7%AF.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;https://ogd99kckh.qnssl.com/1.jpg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;http://og9ocpmwk.bkt.clouddn.com/%E5%B9%B3%E5%87%A1%E4%B9%8B%E8%B7%AF.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;野子&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;苏运莹&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;http://og9ocpmwk.bkt.clouddn.com/01%20%E9%87%8E%E5%AD%90.m4a&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;http://og9ocpmwk.bkt.clouddn.com/%E9%87%8E%E5%AD%90.jpg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;https://ogd99kckh.qnssl.com/%E9%87%8E%E5%AD%90.txt&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="支持RSS订阅"><a href="#支持RSS订阅" class="headerlink" title="支持RSS订阅"></a>支持RSS订阅</h1><ol><li>安装插件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在hexo根目录下执行</span></span><br><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li>修改hexo配置文件_config.yml，启用插件 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>修改主题配置文件 themes[主题名]_config.yml，指定订阅文件路径 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RSS订阅</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>Hexo详细操作，可参考<a href="https://hexo.io/zh-cn/docs/">Hexo参考文档</a>    </li><li>NexT主题细节配置，可参考<a href="http://theme-next.iissnan.com/getting-started.html">NexT 使用文档</a></li><li>Markdown文章书写，可参考<a href="https://studygolang.com/markdown">Markdown简明教程</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hexo为一快速、简洁且高效的博客框架。&lt;br&gt;本文主要简单记录了通过Hexo，借助Github Pages搭建个人博客，并配置主题为NexT的过程，方便后续自己在新环境上重新部署。&lt;br&gt;也因此有些操作可能不够详尽，并且可能已经不是当下的最佳实践了，请谨慎阅读。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
    <category term="Github" scheme="http://example.com/tags/Github/"/>
    
    <category term="GithubPages" scheme="http://example.com/tags/GithubPages/"/>
    
  </entry>
  
</feed>
